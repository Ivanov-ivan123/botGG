import telebot
from telebot import types
import time

BOT_TOKEN = '8132206321:AAF5tzB0T8WEJrdMaLFmrrnMLnKM7t0lsQk'

SPONSOR_CHANNELS = [
    'https://t.me/+YhHwXw-c7T03YTEy',
    'https://t.me/gg_team_13'
]

bot = telebot.TeleBot(BOT_TOKEN)

PHOTO_URL = 'https://i.ibb.co/1t4sn358/photo-2025-06-26-12-08-01.jpg'

START_TEXT = (
    "–õ—ñ—Ç–Ω—ñ–π –ø—ñ–¥–≥–æ–Ω –¥–ª—è –Ω–∞—à–∏—Ö –ª—é–¥–µ–π –≤—ñ–¥ —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ –∫–∞–Ω–∞–ª—ñ–≤.\n\n"
    "–ë—É–¥–µ —Ä–æ–∑–¥–∞–Ω–æ 3 —Ç–∞–∫–∏—Ö –ø–æ–¥–∞—Ä—É–Ω–∫—ñ–≤! –¢–∞ 33 –ø—Ä–µ–º—ñ—É–º –Ω–∞ 12 –º—ñ—Å—è—Ü—ñ–≤!\n\n"
    "–®–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏? –í—Å–µ –ø—Ä–æ—Å—Ç–æ!\n\n"
    "–ù–∞—Ç–∏—Å–Ω–∏ ¬´—Ö–æ—á—É¬ª"
)

STEP_2_TEXT = (
    "–•–æ—á–µ–º–æ –≤—ñ–¥—Ä–∞–∑—É —Å–∫–∞–∑–∞—Ç–∏:\n\n"
    "‚≠ê—Ü–µ –≤—Å–µ –±–µ–∑–∫–æsh—Ç–≤–Ω–æ\n"
    "‚≠ê–º–∏ –Ω–µ –ø–æ—Ç—Ä–µ–±—É—î–º–æ –Ω—ñ—è–∫–æ—ó –≤–∞—à–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó\n"
    "(—Ü–µ –Ω–∞—à —î–¥–∏–Ω–∏–π –æ—Ñ—ñ—Ü—ñ–π–Ω–∏–π –±–æ—Ç)"
)

STEP_3_TEXT = "–†–æ–∑—ñ–≥—Ä–∞—à –±—É–¥–µ 07.07.2025\n\n–©–æ–± –ø—Ä–∏–π–º–∞—Ç–∏ —É—á–∞—Å—Ç—å –Ω–∞—Ç–∏—Å–Ω–∏ ‚¨á"

STEP_4_TEXT = (
    "–ú–∏ –¥—É–∂–µ —Å—Ç–∞—Ä–∞–ª–∏—Å—å —Ç–∞ —Ö–æ—Ç—ñ–ª–∏ –± –ø–æ—Ä–∞–¥—É–≤–∞—Ç–∏ –∫–æ–∂–Ω–æ–≥–æ –Ω–∞—à–æ–≥–æ –ø—ñ–¥–ø–∏—Å–Ω–∏–∫–∞.\n\n"
    "–í –Ω–∞—Å —î –ª–∏—à–µ –æ–¥–Ω–∞ –ª–µ–≥–∫–∞ —É–º–æ–≤–∞.\n"
    "–ü–æ—Ç—Ä—ñ–±–Ω–æ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—å –Ω–∞ –Ω–∞—à–∏—Ö —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤.\n\n"
    "‚≠êÔ∏è [–ü–ï–†–®–ò–ô –ö–ê–ù–ê–õ](https://t.me/+YhHwXw-c7T03YTEy)\n"
    "‚≠êÔ∏è [–î–†–£–ì–ò–ô –ö–ê–ù–ê–õ](https://t.me/gg_team_13)\n\n"
    "–ü—ñ—Å–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏ —Ç–æ–±—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç–∏ ‚ù§Ô∏è –Ω–∞ –∫–æ–∂–Ω–∏–π –æ—Å—Ç–∞–Ω–Ω—ñ–π –¥–æ–ø–∏—Å –≤ –≥—Ä—É–ø–ø—ñ."
)

SUCCESS_TEXT = "‚úÖ –í—ñ—Ç–∞—î–º–æ! –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∑—è–ª–∏ —É—á–∞—Å—Ç—å —É —Ä–æ–∑—ñ–≥—Ä–∞—à—ñ! –û—á—ñ–∫—É–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ 07.07.2025 üéâ"
FAIL_TEXT = "‚ùå –í–∏ –Ω–µ –ø—ñ–¥–ø–∏—Å–∞–Ω—ñ –Ω–∞ –≤—Å—ñ –∫–∞–Ω–∞–ª–∏. –ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è —Ç–∞ –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É."

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton("–•–û–ß–£"))
    bot.send_photo(message.chat.id, photo=PHOTO_URL, caption=START_TEXT, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–•–û–ß–£")
def step_2(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton("–ó–ê–ë–†–ê–¢–¨"))
    bot.send_message(message.chat.id, STEP_2_TEXT, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–ó–ê–ë–†–ê–¢–¨")
def step_3(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton("–¢–£–¢"))
    bot.send_message(message.chat.id, STEP_3_TEXT, reply_markup=markup)

@bot.message_handler(func=lambda message: message.text == "–¢–£–¢")
def step_4(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ü–ï–†–ï–í–Ü–†–ò–¢–ò –ü–Ü–î–ü–ò–°–ö–£ –¢–ê –ü–û–õ–£–ß–ò–¢–ò –ü–ï–ü–£", callback_data="check_subscription"))
    bot.send_message(message.chat.id, STEP_4_TEXT, parse_mode='Markdown', disable_web_page_preview=True, reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'check_subscription')
def handle_check_subscription(call):
    user_id = call.from_user.id
    is_subscribed = True

    for link in SPONSOR_CHANNELS:
        try:
            channel_username = link.split("/")[-1].replace("+", "")
            chat = bot.get_chat(channel_username)
            member = bot.get_chat_member(chat.id, user_id)
            if member.status in ['left', 'kicked']:
                is_subscribed = False
                break
        except Exception as e:
            print(f"Error checking {link}: {e}")
            is_subscribed = False
            break
        time.sleep(1)

    if is_subscribed:
        bot.edit_message_text(
            chat_id=call.message.chat.id,
            message_id=call.message.message_id,
            text=SUCCESS_TEXT
        )
    else:
        bot.answer_callback_query(
            call.id,
            text=FAIL_TEXT,
            show_alert=True
        )

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
bot.infinity_polling()
